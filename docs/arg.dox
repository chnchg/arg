// -*- mode: c++; -*- vim: syntax=cpp
/**

\mainpage Reference Manual
This C++ library faciliates the processing of command-line arguments through
an `arg::Parser` object. After creation, the parser is informed of options that
it will parse for and their disposition. The `argc` and `argv` from the
signature of `main` function are then passed to the parser to activate the
magic.

In brief, to use the arg parser, you need to:
1. include the header file `arg.hh` in your program;
2. create a parser object (`arg::Parser`);
3. add options to the parser object;
4. pass command-line data to the parser object.

An example of simple programs using the arg parser as follows.
\code{.cpp}
#include <arg.hh> // 1.
#include <iostream>

int main(int argc, char ** argv)
{
	arg::Parser p; // 2.

	int n;
	p.add_opt('n').stow(n); // 3.

	p.parse(argc, argv); // 4.

	std::cout << n << '\n';
	return 0;
}
\endcode
This allows you to pass, on command line, an integer to the variable `n` in the program. The above is included as \ref arg_ex0.cc in the examples.

Please see https://ccdw.org/~cjj/prog/arg/ for more information.

\author Chun-Chung Chen <cjj@u.washington.edu>

\namespace arg Base namespace for the library

\file arg.hh header file for arg library

\file val.hh header file providing additional Value classes 

\example arg_ex0.cc
Simplest example using the arg library

\example arg_ex1.cc
A more complex example with help text

\example arg_ex2.cc
An exmaple with sub-parser

*/
